<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoftware, Beige-Accounting</title>
   </properties>

  <body>

    <section name="Beige-Accounting on Android.">

    <p>Keywords: Accounting software for Android.</p>
<p>
  This is same WEB application based on embedded A-Jetty for Android.
  New Beige-Accounting for Android comply rules <a href="https://play.google.com/about/privacy-security/personal-sensitive/">https://play.google.com/about/privacy-security/personal-sensitive/</a>,
  i.e. private data (SQLite database, private log files, key-store with keys for encryption) are in private application storage,
  all other applications can't read this files. Beige Accounting uses encryption to make HTTPS connection and to backup encrypted SQLite databases and logs.
  These encrypted files are stored on external storage, all other application can't decrypt them.
</p>
<p>
  Bob decided to try this application on his Android smartphone.
  He installed Google Chrome.
  Then he installed Beige Accounting from Play Store. He started it in the same way as described in <a href="acc-settings.html">Software installation...</a>.
  <p align="center"><img style="max-width: 100%" src="images/android-start.png" /></p>
  Files <b>ajetty-ca.pem</b> and <b>ajetty-file-exch777.kpub</b> will be at the root of external storage.
  To install A-Jetty CA certificate select Settings -> Security -> Install certificate from storage
  (you will be forced to set screen locking - PIN with/without fingerprint, if you haven't it yet):
  <p align="center"><img style="max-width: 100%" src="images/android-ca.png" /></p>
  You can find this certificate in Security -> Trusted Credentials -> User:
  <p align="center"><img style="max-width: 100%" src="images/android-ca1.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android-ca2.png" /></p>
  <p>Start menu is:</p>
  <p align="center"><img style="max-width: 100%" src="images/android-start-menu.png" /></p>
  <p>To send SQLite database from notebook to smartphone Bob copied public key <b>ajetty-file-exch777.kpub</b> from smartphone to notebook folder
  <b>/home/accountant/beigesoft-accountingoio-ajetty/pub-exch</b>:
    <p align="center"><img style="max-width: 100%" src="images/copypubtonote.png" /></p>
    then Bob opened Database Manager, checked SHA1 fingerprint of public key A-Jetty777, then pressed <b>backup</b>:
    <p align="center"><img style="max-width: 100%" src="images/backupto777.png" /></p>
    then he copied 4 encrypted files and notebook A-Jetty public key <b>ajetty-file-exch444.kpub</b> into smartphone public backup folder:
    <p align="center"><img style="max-width: 100%" src="images/copytoandroid.png" /></p>
  </p>
  Then Bob restored database on smartphone:
  <p align="center"><img style="max-width: 100%" src="images/android-dbmanager.png" /></p>
  <p align="center">He looks at the same data:</p>
  <p align="center"><img style="max-width: 100%" src="images/android-data1.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android-data2.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android-balance.png" /></p>
  <p>He can create new purchase invoice:</p>
  <p align="center"><img style="max-width: 100%" src="images/android-purchaseline.png" /></p>
  <br></br>
  <p>Screenshots from virtual Nexus 10 Android 7 (api24):</p>
  <p align="center"><img style="max-width: 100%" src="images/android-vn10-a7-balance.png" /></p>
  <p>Chrome asks for permission of public storage to download file (balance.pdf).
    It's seems that this file will be accessible to other applications that have permission to the storage,
    but Chrome does it delicate - it "hides, passes to the PDF-viewer then deletes" downloaded file,
    so you can't find it (file) in the storage.
    Maybe Chrome does it more properly (for files that has default application) - it uses private storage to downloads PDF then passes it to the viewer.</p>
  <p align="center"><img style="max-width: 100%" src="images/android7-chrome-storage.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android7-invoice.png" /></p>
  <br></br>
  <p>Screenshots from virtual Nexus 9 Android 6 (api23):</p>
  <p align="center"><img style="max-width: 100%" src="images/android-vn9-a6-dbmanager.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android-vn9-a6-accentries.png" /></p>
  <p align="center"><img style="max-width: 100%" src="images/android-vn9-a6-salesinv.png" /></p>
  
</p>

    </section>

  </body>

</document>
